
{:display-name "cassandra.yaml",
 :package-path "/etc/cassandra/cassandra.yaml",
 :workload-file-group "cassandra",
 :ui-visibility :editable,
 :renderer {:renderer-type :yaml},
 :properties
 {:concurrent_writes {:type "int", :default_value 32},
  :hinted_handoff_enabled {:type "boolean", :default_value true},
  :dynamic_snitch_update_interval_in_ms
  {:type "int", :default_value 100, :unit "ms"},
  :max_hint_window_in_ms
  {:type "int", :default_value 10800000, :unit "ms"},
  :cross_node_timeout {:type "boolean", :default_value false},
  :unlogged_batch_across_partitions_warn_threshold
  {:type "int", :default_value 10},
  :compaction_throughput_mb_per_sec
  {:type "int", :default_value 64, :unit "MB/sec"},
  :storage_port {:type "int", :default_value 7000, :format false},
  :start_native_transport
  {:type "boolean", :readonly true, :default_value true},
  :snapshot_before_compaction {:type "boolean", :default_value false},
  :permissions_validity_in_ms {:type "int", :default_value 2000},
  :compaction_large_partition_warning_threshold_mb
  {:type "int", :default_value 100},
  :column_index_cache_size_in_kb
  {:type "int", :default_value 2, :unit "KB"},
  :max_hints_delivery_threads {:type "int", :default_value 2},
  :gc_warn_threshold_in_ms {:type "int", :unit "ms", :default_value 1000},
  :commit_failure_policy
  {:type "string",
   :options
   [{:label "die", :value "die"}
    {:label "stop", :value "stop"}
    {:label "stop commit", :value "stop_commit"}
    {:label "ignore", :value "ignore"}],
   :default_value "stop"},
  :truncate_request_timeout_in_ms
  {:type "int", :default_value 60000, :unit "ms"},
  :request_timeout_in_ms
  {:type "int", :default_value 10000, :unit "ms"},
  :concurrent_counter_writes {:type "int", :default_value 32},
  :range_request_timeout_in_ms
  {:type "int", :default_value 10000, :unit "ms"},
  :trickle_fsync_interval_in_kb
  {:type "int", :default_value 10240, :unit "KB"},
  :credentials_validity_in_ms
  {:type "int", :default_value 2000, :unit "ms"},
  :endpoint_snitch
  {:type "string",
   :options
   [{:label "GossipingPropertyFileSnitch",
     :value
     "org.apache.cassandra.locator.GossipingPropertyFileSnitch"}],
   :default_value "GossipingPropertyFileSnitch",
   :description
   "Gossiping Property File Snitch (GPFS) is automatically configured according to the rack setting on each node in the cluster topology. GPFS is the only endpoint_snitch supported by LCM because it is the only snitch that supports all possible topologies and can be configured independently on each node."},
  :role_manager
  {:type "string",
   :options
   [{:label "CassandraRoleManager",
     :value "org.apache.cassandra.auth.CassandraRoleManager"}],
   :default_value "org.apache.cassandra.auth.CassandraRoleManager"},
  :ssl_storage_port {:type "int", :default_value 7001, :format false},
  :tracetype_repair_ttl {:type "int", :default_value 604800},
  :hints_flush_period_in_ms {:type "int", :default_value 10000},
  :counter_cache_save_period {:type "int", :default_value 7200},
  :batch_size_fail_threshold_in_kb {:type "int", :default_value 640},
  :memtable_flush_writers {:type "int"},
  :row_cache_size_in_mb {:type "int", :default_value 0, :unit "MB"},
  :tombstone_warn_threshold {:type "int", :default_value 1000},
  :concurrent_materialized_view_writes
  {:type "int", :default_value 32},
  :incremental_backups {:type "boolean", :default_value false},
  :commitlog_segment_size_in_mb
  {:type "int", :default_value 32, :unit "MB"},
  :tracetype_query_ttl {:type "int", :default_value 86400},
  :key_cache_save_period
  {:type "int", :default_value 14400, :unit "seconds"},
  :read_request_timeout_in_ms
  {:type "int", :default_value 5000, :unit "ms"},
  :dynamic_snitch_reset_interval_in_ms
  {:type "int", :default_value 600000, :unit "ms"},
  :transparent_data_encryption_options
  {:type "dict",
   :order [:enabled :chunk_length_kb :cipher :key_alias :key_provider],
   :fields
   {:enabled {:type "boolean", :default_value false},
    :chunk_length_kb {:type "int", :default_value 64},
    :cipher {:type "string", :default_value "AES/CBC/PKCS5Padding"},
    :key_alias {:type "string", :default_value "testing:1"},
    :key_provider
    {:type "list",
     :value_type "dict",
     :order [:class_name :parameters],
     :fields
     {:class_name {:type "string"},
      :parameters
      {:type "list",
       :value_type "dict",
       :order [:keystore :keystore_password :store_type :key_password],
       :fields
       {:keystore {:type "string"},
        :keystore_password
        {:type "string",
         :password true,
         :key_name "Keystore Password"},
        :store_type {:type "string", :key_name "Store Type"},
        :key_password
        {:type "string",
         :password true,
         :key_name "Key Password"}}}}}}},
  :slow_query_log_timeout_in_ms
  {:type "int", :default_value 500, :unit "ms"},
  :counter_cache_size_in_mb {:type "int"},
  :disk_failure_policy
  {:type "string",
   :options
   [{:label "die", :value "die"}
    {:label "stop_paranoid", :value "stop_paranoid"}
    {:label "stop", :value "stop"}
    {:label "best effort", :value "best_effort"}
    {:label "ignore", :value "ignore"}],
   :default_value "stop"},
  :memtable_allocation_type
  {:type "string",
   :options
   [{:label "heap_buffers", :value "heap_buffers"}
    {:label "offheap_buffers", :value "offheap_buffers"}
    {:label "offheap_objects", :value "offheap_objects"}],
   :default_value "heap_buffers"},
  :tombstone_failure_threshold {:type "int", :default_value 100000},
  :native_transport_port
  {:type "int", :default_value 9042, :format false},
  :index_summary_capacity_in_mb {:type "int", :unit "MB"},
  :commitlog_sync
  {:type "string",
   :options
   [{:label "periodic", :value "periodic"}
    {:label "batch", :value "batch"}],
   :default_value "periodic"},
  :enable_scripted_user_defined_functions
  {:type "boolean", :default_value false},
  :max_hints_file_size_in_mb {:type "int", :default_value 128},
  :rpc_keepalive {:type "boolean", :default_value true},
  :trickle_fsync {:type "boolean", :default_value true},
  :roles_validity_in_ms {:type "int", :default_value 2000},
  :prepared_statements_cache_size_mb {:type "string"},
  :client_encryption_options
  {:type "dict",
   :order
   [:enabled
    :optional
    :keystore
    :keystore_password
    :require_client_auth
    :truststore
    :truststore_password
    :protocol
    :store_type
    :cipher_suites],
   :fields
   {:enabled
    {:type "boolean"
     :default_value false}
    :keystore
    {:type "string",
     :is_file true,
     :default_value "conf/.keystore"},
    :cipher_suites
    {:type "list",
     :value_type "string"},
    :keystore_password
    {:type "string",
     :password true,
     :default_value "cassandra"
     :validators [{:name :length, :params {:min 6}}]},
    :store_type
    {:type "string"},
    :protocol
    {:type "string"},
    :truststore_password
    {:type "string",
     :password true,
     :default_value "password"
     :validators [{:name :length, :params {:min 6}}]},
    :require_client_auth
    {:type "boolean",
     :default_value false},
    :optional
    {:type "boolean",
     :description
     "When 'optional' is selected, both encrypted and unencrypted connections over native transport are allowed. That is a necessary transition state to facilitate enabling client to node encryption on live clusters without inducing an outage for existing unencrypted clients. Typically, once existing clients are migrated to encrypted connections, 'optional' is unselected in order to enforce native transport encryption."},
    :truststore
    {:type "string",
     :is_file true,
     :default_value "conf/.truststore"}}},
  :key_cache_size_in_mb {:type "int", :unit "MB"},
  :commitlog_sync_period_in_ms
  {:type "int",
   :default_value 10000
   :depends :commitlog_sync,
   :conditional [{:eq "periodic"}]},
  :batch_size_warn_threshold_in_kb {:type "int", :default_value 64},
  :row_cache_save_period
  {:type "int", :default_value 0, :unit "seconds"},
  :inter_dc_tcp_nodelay {:type "boolean", :default_value false},
  :num_tokens {:type "int"},
  :partitioner
  {:type "string",
   :options
   [{:label "Murmur3Partitioner",
     :value "org.apache.cassandra.dht.Murmur3Partitioner"}
    {:label "RandomPartitioner",
     :value "org.apache.cassandra.dht.RandomPartitioner"}],
   :default_value "org.apache.cassandra.dht.Murmur3Partitioner"},
  :column_index_size_in_kb
  {:type "int", :default_value 64, :unit "KB"},
  :enable_sasi_indexes {:type "boolean", :default_value true},
  :internode_compression
  {:type "string",
   :options
   [{:label "all", :value "all"}
    {:label "dc", :value "dc"}
    {:label "none", :value "none"}],
   :default_value "dc"},
  :enable_user_defined_functions
  {:type "boolean", :default_value false},
  :dynamic_snitch_badness_threshold
  {:type "float", :default_value 0.1},
  :authorizer
  {:type "string",
   :options
   [{:label "AllowAllAuthorizer", :value "AllowAllAuthorizer"}
    {:label "CassandraAuthorizer", :value "CassandraAuthorizer"}],
   :default_value "AllowAllAuthorizer"},
  :batchlog_replay_throttle_in_kb {:type "int", :default_value 1024},
  :hinted_handoff_throttle_in_kb
  {:type "int", :default_value 1024, :unit "KB"},
  :cas_contention_timeout_in_ms
  {:type "int", :default_value 1000, :unit "ms"},
  :cdc_enabled {:type "boolean", :default_value false},
  :counter_write_request_timeout_in_ms
  {:type "int", :default_value 5000},
  :windows_timer_interval {:type "int", :unit "ms", :default_value 1},
  :auto_snapshot {:type "boolean", :default_value true},
  :write_request_timeout_in_ms
  {:type "int", :default_value 2000, :unit "ms"},
  :enable_materialized_views {:type "boolean", :default_value true},
  :concurrent_reads {:type "int", :default_value 32},
  :authenticator
  {:type "string",
   :options
   [{:label "AllowAllAuthenticator", :value "AllowAllAuthenticator"}
    {:label "PasswordAuthenticator", :value "PasswordAuthenticator"}],
   :default_value "AllowAllAuthenticator"},
  :concurrent_compactors {:type "int"},
  :sstable_preemptive_open_interval_in_mb
  {:type "int", :default_value 50, :unit "MB"},
  :index_summary_resize_interval_in_minutes
  {:type "int", :default_value 60},
  :server_encryption_options
  {:type "dict",
   :order
   [:internode_encryption
    :optional
    :enable_legacy_ssl_storage_port
    :keystore
    :keystore_password
    :truststore
    :truststore_password
    :protocol
    :algorithm
    :store_type
    :cipher_suites
    :require_client_auth
    :require_endpoint_verification],
   :fields
   {:keystore
    {:type "string",
     :is_file true,
     :depends :internode_encryption,
     :default_value "conf/.keystore"
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :cipher_suites
    {:type "list",
     :value_type "string",
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :keystore_password
    {:type "string",
     :password true,
     :validators [{:name :length, :params {:min 6}}],
     :default_value "cassandra"
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :store_type
    {:type "string",
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :algorithm
    {:type "string",
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :protocol
    {:type "string",
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :internode_encryption
    {:type "string",
     :default_value "none",
     :options
     [{:label "none", :value "none"}
      {:label "all", :value "all"}
      {:label "dc", :value "dc"}
      {:label "rack", :value "rack"}]},
    :optional
    {:type "boolean"}
    :enable_legacy_ssl_storage_port
    {:type "boolean", :default_value false}
    :truststore_password
    {:type "string",
     :password true,
     :validators [{:name :length, :params {:min 6}}],
     :depends :internode_encryption,
     :default_value "cassandra"
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :require_client_auth
    {:type "boolean",
     :default_value false,
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :require_endpoint_verification
    {:type "boolean",
     :default_value false,
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :truststore
    {:type "string",
     :is_file true,
     :depends :internode_encryption,
     :default_value "conf/.truststore"
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]}}},
  :hints_compression
  {:type "list",
   :value_type "dict",
   :order [:class_name :parameters],
   :fields
   {:class_name {:type "string"},
    :parameters {:type "user_defined", :value_type "string"}}}
  ; :replica_filtering_protection
  ; {:type "dict"
  ;  :order [:cached_rows_warn_threshold
  ;          :cached_rows_fail_threshold]
  ;  :fields
  ;  {:cached_rows_warn_threshold 
  ;   {:type "int"
  ;    :default_value 2000}
  ;   :cached_rows_fail_threshold
  ;   {:type "int"
  ;    :default_value 32000}}}
     },
 :groupings
 [{:name "Security",
   :list
   ["authenticator"
    "authorizer"
    "role_manager"
    "permissions_validity_in_ms"
    "roles_validity_in_ms"
    "credentials_validity_in_ms"
    "server_encryption_options"
    "client_encryption_options"
    "transparent_data_encryption_options"]}
  {:name "General", :list ["partitioner" "num_tokens"]}
  {:name "Ports",
   :list
   ["storage_port"
    "ssl_storage_port"
    "native_transport_port"]}
  {:name "Caches",
   :list
   ["key_cache_size_in_mb"
    "key_cache_save_period"
    "row_cache_size_in_mb"
    "row_cache_save_period"]}
  {:name "Commit Log",
   :list
   ["commitlog_sync"
    "commitlog_segment_size_in_mb"
    "commitlog_sync_period_in_ms"]}
  {:name "Garbage Collection", :list ["gc_warn_threshold_in_ms"]}
  {:name "Concurrency Control",
   :list
   ["concurrent_reads"
    "concurrent_writes"
    "concurrent_counter_writes"
    "concurrent_materialized_view_writes"]}
  {:name "Memtable Settings",
   :list ["memtable_allocation_type" "memtable_flush_writers"]}
  {:name "Native Transport", :list ["start_native_transport"]}
  {:name "Timeouts",
   :list
   ["read_request_timeout_in_ms"
    "range_request_timeout_in_ms"
    "write_request_timeout_in_ms"
    "cas_contention_timeout_in_ms"
    "truncate_request_timeout_in_ms"
    "request_timeout_in_ms"
    "slow_query_log_timeout_in_ms"
    "cross_node_timeout"
    "counter_write_request_timeout_in_ms"]}
  {:name "Counter Caches",
   :list ["counter_cache_size_in_mb" "counter_cache_save_period"]}
  {:name "Tombstones",
   :list ["tombstone_warn_threshold" "tombstone_failure_threshold"]}
  {:name "Snapshots",
   :list
   ["incremental_backups"
    "auto_snapshot"
    "snapshot_before_compaction"]}
  {:name "Compactions",
   :list
   ["compaction_throughput_mb_per_sec"
    "concurrent_compactors"
    "sstable_preemptive_open_interval_in_mb"
    "compaction_large_partition_warning_threshold_mb"]}
  {:name "Cluster Communication",
   :list
   ["endpoint_snitch"
    "dynamic_snitch_update_interval_in_ms"
    "dynamic_snitch_reset_interval_in_ms"
    "dynamic_snitch_badness_threshold"
    "internode_compression"
    "inter_dc_tcp_nodelay"]}
  {:name "Hinted Handoff",
   :list
   ["hinted_handoff_enabled"
    "max_hint_window_in_ms"
    "hinted_handoff_throttle_in_kb"
    "max_hints_delivery_threads"
    "hints_flush_period_in_ms"
    "max_hints_file_size_in_mb"
    "hints_compression"]}
  {:name "Indexes",
   :list
   ["column_index_size_in_kb"
    "column_index_cache_size_in_kb"
    "index_summary_capacity_in_mb"
    "index_summary_resize_interval_in_minutes"]}
  {:name "User Defined Functions",
   :list
   ["enable_user_defined_functions"
    "enable_scripted_user_defined_functions"]}
  {:name "Change Data Capture", :list ["cdc_enabled"]}
  {:name "Miscellaneous",
   :list
   [
    ;  "replica_filtering_protection"
    "disk_failure_policy"
    "commit_failure_policy"
    "trickle_fsync"
    "trickle_fsync_interval_in_kb"
    "batchlog_replay_throttle_in_kb"
    "batch_size_warn_threshold_in_kb"
    "batch_size_fail_threshold_in_kb"
    "unlogged_batch_across_partitions_warn_threshold"
    "windows_timer_interval"
    "tracetype_query_ttl"
    "tracetype_repair_ttl"
    "prepared_statements_cache_size_mb"]}]}
