;; Generated by lcm.utils.osshacks/build-and-write-oss-cassandra-4_0_0-cassandra-yaml

{:display-name "cassandra.yaml",
 :package-path "/etc/cassandra/cassandra.yaml",
 :workload-file-group "cassandra",
 :ui-visibility :editable,
 :renderer {:renderer-type :yaml},
 :properties
 {:hinted_handoff_enabled
  {:type "boolean", :required true, :default_value true},
  :dynamic_snitch_update_interval_in_ms
  {:type "int", :required true, :default_value 100, :unit "ms"},
  :max_hint_window_in_ms
  {:type "int", :required true, :default_value 10800000, :unit "ms"},
  :cross_node_timeout
  {:type "boolean", :required true, :default_value false},
  :compaction_throughput_mb_per_sec
  {:type "int", :required true, :default_value 16, :unit "MB/sec"},
  :storage_port
  {:type "int", :required true, :default_value 7000, :format false},
  :start_native_transport
  {:type "boolean",
   :required true,
   :readonly true,
   :default_value true},
  :snapshot_before_compaction
  {:type "boolean", :required true, :default_value false},
  :permissions_validity_in_ms
  {:type "int", :required true, :default_value 120000},
  :column_index_cache_size_in_kb
  {:type "int", :required true, :default_value 2, :unit "KB"},
  :max_hints_delivery_threads
  {:type "int", :required true, :default_value 2},
  :gc_warn_threshold_in_ms {:type "int", :required false, :unit "ms"},
  :commit_failure_policy
  {:type "string",
   :required true,
   :options
   [{:label "die", :value "die"}
    {:label "stop", :value "stop"}
    {:label "stop commit", :value "stop_commit"}
    {:label "ignore", :value "ignore"}],
   :default_value "stop"},
  :truncate_request_timeout_in_ms
  {:type "int", :required true, :default_value 60000, :unit "ms"},
  :request_timeout_in_ms
  {:type "int", :required true, :default_value 10000, :unit "ms"},
  :range_request_timeout_in_ms
  {:type "int", :required true, :default_value 10000, :unit "ms"},
  :trickle_fsync_interval_in_kb
  {:type "int", :required true, :default_value 10240, :unit "KB"},
  :endpoint_snitch
  {:type "string",
   :required true,
   :options
   [{:label "GossipingPropertyFileSnitch",
     :value
     "org.apache.cassandra.locator.GossipingPropertyFileSnitch"}],
   :default_value "GossipingPropertyFileSnitch"},
  :role_manager
  {:type "string",
   :required true,
   :options
   [{:label "CassandraRoleManager",
     :value "org.apache.cassandra.auth.CassandraRoleManager"}],
   :default_value "org.apache.cassandra.auth.CassandraRoleManager"},
  :ssl_storage_port
  {:type "int", :required true, :default_value 7001, :format false},
  :tracetype_repair_ttl {:type "int", :default_value 604800},
  :hints_flush_period_in_ms
  {:type "int", :required true, :default_value 10000},
  :counter_cache_save_period
  {:type "int", :required true, :default_value 7200},
  :memtable_flush_writers
  {:type "int", :required false, :default_value 8},
  :row_cache_size_in_mb
  {:type "int", :required true, :default_value 0, :unit "MB"},
  :incremental_backups
  {:type "boolean", :required true, :default_value false},
  :commitlog_segment_size_in_mb
  {:type "int", :required true, :default_value 32, :unit "MB"},
  :tracetype_query_ttl {:type "int", :default_value 86400},
  :read_request_timeout_in_ms
  {:type "int", :required true, :default_value 5000, :unit "ms"},
  :dynamic_snitch_reset_interval_in_ms
  {:type "int", :required true, :default_value 600000, :unit "ms"},
  :transparent_data_encryption_options
  {:type "dict",
   :order [:enabled :chunk_length_kb :cipher :key_alias :key_provider],
   :fields
   {:enabled {:type "boolean", :required true, :default_value false},
    :chunk_length_kb {:type "int", :required true, :default_value 64},
    :cipher
    {:type "string",
     :required true,
     :default_value "AES/CBC/PKCS5Padding"},
    :key_alias
    {:type "string", :required true, :default_value "testing:1"},
    :key_provider
    {:type "list",
     :value_type "dict",
     :order [:class_name :parameters],
     :fields
     {:class_name {:type "string"},
      :parameters
      {:type "list",
       :value_type "dict",
       :order [:keystore :keystore_password :store_type :key_password],
       :fields
       {:keystore {:type "string"},
        :keystore_password {:type "string", :password true},
        :store_type {:type "string"},
        :key_password {:type "string", :password true}}}}}}},
  :slow_query_log_timeout_in_ms
  {:type "int", :required true, :default_value 500, :unit "ms"},
  :counter_cache_size_in_mb {:type "int", :required false},
  :disk_failure_policy
  {:type "string",
   :required true,
   :options
   [{:label "die", :value "die"}
    {:label "stop_paranoid", :value "stop_paranoid"}
    {:label "stop", :value "stop"}
    {:label "best effort", :value "best_effort"}
    {:label "ignore", :value "ignore"}],
   :default_value "stop"},
  :memtable_allocation_type
  {:type "string",
   :required true,
   :options
   [{:label "heap_buffers", :value "heap_buffers"}
    {:label "offheap_buffers", :value "offheap_buffers"}
    {:label "offheap_objects", :value "offheap_objects"}],
   :default_value "offheap_objects"},
  :native_transport_port
  {:type "int", :required true, :default_value 9042, :format false},
  :commitlog_sync
  {:type "string",
   :required true,
   :options
   [{:label "periodic", :value "periodic"}
    {:label "batch", :value "batch"}
    {:label "group", :value "group"}],
   :default_value "periodic"},
  :enable_scripted_user_defined_functions
  {:type "boolean", :required true, :default_value false},
  :max_hints_file_size_in_mb
  {:type "int", :required true, :default_value 128},
  :rpc_keepalive
  {:type "boolean", :required true, :default_value true},
  :trickle_fsync
  {:type "boolean", :required true, :default_value true},
  :roles_validity_in_ms
  {:type "int", :default_value 120000, :required true},
  :prepared_statements_cache_size_mb {:type "string", :required false},
  :client_encryption_options
  {:type "dict",
   :order
   [:enabled
    :optional
    :keystore
    :keystore_type
    :keystore_password
    :require_client_auth
    :truststore
    :truststore_type
    :truststore_password
    :protocol
    :algorithm
    :cipher_suites],
   :fields
   {:keystore
    {:type "string",
     :is_file true,
     :default_value "/etc/dse/keystores/client.keystore",
     :depends :enabled,
     :conditional [{:eq true}]},
    :cipher_suites
    {:type "list",
     :required false,
     :value_type "string",
     :depends :enabled,
     :description
     "A list of encryption cipher-suites that DSE will accept when negotiating TLS connections. In most cases, leaving this list empty is the right thing to do and will allow the JVM to select from its internal list of allowed ciphers. If this list is set explicitly, each text field must contain a single cipher_suite name, for example: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256",
     :conditional [{:eq true}]},
    :keystore_password
    {:type "string",
     :password true,
     :validators [{:name :length, :params {:min 6}}],
     :default_value "cassandra",
     :depends :enabled,
     :conditional [{:eq true}]},
    :algorithm
    {:type "string",
     :required false,
     :default_value "SunX509",
     :depends :enabled,
     :conditional [{:eq true}]},
    :protocol
    {:type "string",
     :required false,
     :default_value "TLS",
     :depends :enabled,
     :conditional [{:eq true}]},
    :truststore_type
    {:type "string",
     :required false,
     :default_value "JKS",
     :options
     [{:label "JKS", :value "JKS"}
      {:label "JCEKS", :value "JCEKS"}
      {:label "PKCS12", :value "PKCS12"}
      {:label "PKCS11", :value "PKCS11"}],
     :depends :enabled,
     :conditional [{:eq true}]},
    :truststore_password
    {:type "string",
     :depends :enabled,
     :password true,
     :validators [{:name :length, :params {:min 6}}],
     :default_value "cassandra",
     :conditional [{:eq true}]},
    :require_client_auth
    {:type "boolean",
     :required true,
     :default_value false,
     :depends :enabled,
     :conditional [{:eq true}]},
    :optional
    {:type "boolean",
     :required true,
     :default_value false,
     :depends :enabled,
     :conditional [{:eq true}],
     :description
     "When 'optional' is selected, both encrypted and unencrypted connections over native transport are allowed. That is a necessary transition state to facilitate enabling client to node encryption on live clusters without inducing an outage for existing unencrypted clients. Typically, once existing clients are migrated to encrypted connections, 'optional' is unselected in order to enforce native transport encryption."},
    :truststore
    {:type "string",
     :depends :enabled,
     :is_file true,
     :default_value "/etc/dse/keystores/client.truststore",
     :conditional [{:eq true}]},
    :keystore_type
    {:type "string",
     :required false,
     :default_value "JKS",
     :options
     [{:label "JKS", :value "JKS"}
      {:label "JCEKS", :value "JCEKS"}
      {:label "PKCS12", :value "PKCS12"}
      {:label "PKCS11", :value "PKCS11"}],
     :depends :enabled,
     :conditional [{:eq true}]},
    :enabled {:type "boolean", :required true, :default_value false}},
   :required true},
  :commitlog_sync_period_in_ms
  {:type "int",
   :default_value 10000,
   :depends :commitlog_sync,
   :conditional [{:eq "periodic"}]},
  :row_cache_save_period
  {:type "int", :required true, :default_value 0, :unit "seconds"},
  :inter_dc_tcp_nodelay
  {:type "boolean", :required true, :default_value false},
  :num_tokens {:type "int", :required false},
  :partitioner
  {:type "string",
   :required true,
   :options
   [{:label "Murmur3Partitioner",
     :value "org.apache.cassandra.dht.Murmur3Partitioner"}
    {:label "RandomPartitioner",
     :value "org.apache.cassandra.dht.RandomPartitioner"}],
   :default_value "org.apache.cassandra.dht.Murmur3Partitioner"},
  :column_index_size_in_kb
  {:type "int", :required true, :default_value 16, :unit "KB"},
  :internode_compression
  {:type "string",
   :required true,
   :options
   [{:label "all", :value "all"}
    {:label "dc", :value "dc"}
    {:label "none", :value "none"}],
   :default_value "dc"},
  :enable_user_defined_functions
  {:type "boolean", :required true, :default_value false},
  :dynamic_snitch_badness_threshold
  {:type "float", :required true, :default_value 0.1},
  :authorizer
  {:type "string",
   :required true,
   :options
   [{:label "AllowAllAuthorizer", :value "AllowAllAuthorizer"}
    {:label "CassandraAuthorizer", :value "CassandraAuthorizer"}],
   :default_value "AllowAllAuthorizer"},
  :batchlog_replay_throttle_in_kb
  {:type "int", :required true, :default_value 1024},
  :hinted_handoff_throttle_in_kb
  {:type "int", :required true, :default_value 1024, :unit "KB"},
  :cas_contention_timeout_in_ms
  {:type "int", :required true, :default_value 1000, :unit "ms"},
  :cdc_enabled {:type "boolean", :default_value false, :required true},
  :counter_write_request_timeout_in_ms
  {:type "int", :required true, :default_value 5000},
  :windows_timer_interval {:type "int", :default_value 1, :unit "ms"},
  :auto_snapshot
  {:type "boolean", :required true, :default_value true},
  :back_pressure_enabled
  {:type "boolean", :default_value false, :required true},
  :write_request_timeout_in_ms
  {:type "int", :required true, :default_value 2000, :unit "ms"},
  :back_pressure_strategy
  {:type "list",
   :depends :back_pressure_enabled,
   :value_type "dict",
   :order [:class_name :parameters],
   :fields
   {:class_name {:type "string"},
    :parameters
    {:type "list",
     :value_type "dict",
     :order [:high_ratio :factor :flow],
     :fields
     {:high_ratio {:type "float"},
      :factor {:type "int"},
      :flow {:type "string"}}}},
   :default_value
   [{:class_name "org.apache.cassandra.net.RateBasedBackPressure",
     :parameters [{:high_ratio 0.9, :factor 5, :flow "FAST"}]}],
   :conditional [{:eq true}]},
  :authenticator
  {:type "string",
   :required true,
   :options
   [{:label "AllowAllAuthenticator", :value "AllowAllAuthenticator"}
    {:label "PasswordAuthenticator", :value "PasswordAuthenticator"}],
   :default_value "AllowAllAuthenticator"},
  :concurrent_compactors {:type "int", :required false},
  :sstable_preemptive_open_interval_in_mb
  {:type "int", :required true, :default_value 50, :unit "MB"},
  :server_encryption_options
  {:type "dict",
   :order
   [:internode_encryption
    :keystore
    :keystore_type
    :keystore_password
    :truststore
    :truststore_type
    :truststore_password
    :protocol
    :algorithm
    :cipher_suites
    :require_client_auth
    :require_endpoint_verification],
   :fields
   {:keystore
    {:type "string",
     :is_file true,
     :default_value "/etc/dse/keystores/server.keystore",
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :cipher_suites
    {:type "list",
     :value_type "string",
     :required false,
     :description
     "A list of encryption cipher-suites that DSE will accept when negotiating TLS connections. In most cases, leaving this list empty is the right thing to do and will allow the JVM to select from its internal list of allowed ciphers. If this list is set explicitly, each text field must contain a single cipher_suite name, for example: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256",
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :keystore_password
    {:type "string",
     :password true,
     :validators [{:name :length, :params {:min 6}}],
     :default_value "cassandra",
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :algorithm
    {:type "string",
     :required false,
     :default_value "SunX509",
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :protocol
    {:type "string",
     :required false,
     :default_value "TLS",
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :internode_encryption
    {:type "string",
     :options
     [{:label "none", :value "none"}
      {:label "all", :value "all"}
      {:label "dc", :value "dc"}
      {:label "rack", :value "rack"}],
     :default_value "none"},
    :truststore_type
    {:type "string",
     :required false,
     :default_value "JKS",
     :options
     [{:label "JKS", :value "JKS"}
      {:label "JCEKS", :value "JCEKS"}
      {:label "PKCS12", :value "PKCS12"}
      {:label "PKCS11", :value "PKCS11"}],
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :truststore_password
    {:type "string",
     :password true,
     :validators [{:name :length, :params {:min 6}}],
     :default_value "cassandra",
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :require_client_auth
    {:type "boolean",
     :required true,
     :default_value false,
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :require_endpoint_verification
    {:type "boolean",
     :required true,
     :default_value false,
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :truststore
    {:type "string",
     :is_file true,
     :default_value "/etc/dse/keystores/server.truststore",
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]},
    :keystore_type
    {:type "string",
     :required false,
     :default_value "JKS",
     :options
     [{:label "JKS", :value "JKS"}
      {:label "JCEKS", :value "JCEKS"}
      {:label "PKCS12", :value "PKCS12"}
      {:label "PKCS11", :value "PKCS11"}],
     :depends :internode_encryption,
     :conditional [{:eq "all"} {:eq "dc"} {:eq "rack"}]}},
   :required true},
  :hints_compression
  {:type "list",
   :value_type "dict",
   :order [:class_name :parameters],
   :fields
   {:class_name {:type "string"},
    :parameters {:type "user_defined", :value_type "string"}}}},
 :groupings
 [{:name "Security",
   :list
   ["authenticator"
    "authorizer"
    "role_manager"
    "permissions_validity_in_ms"
    "roles_validity_in_ms"
    "server_encryption_options"
    "client_encryption_options"
    "transparent_data_encryption_options"]}
  {:name "General", :list ["partitioner" "num_tokens"]}
  {:name "Ports",
   :list ["storage_port" "ssl_storage_port" "native_transport_port"]}
  {:name "Caches",
   :list ["row_cache_size_in_mb" "row_cache_save_period"]}
  {:name "Commit Log",
   :list
   ["commitlog_sync"
    "commitlog_segment_size_in_mb"
    "commitlog_sync_period_in_ms"]}
  {:name "Garbage Collection", :list ["gc_warn_threshold_in_ms"]}
  {:name "Memtable Settings",
   :list ["memtable_allocation_type" "memtable_flush_writers"]}
  {:name "RPC", :list ["rpc_keepalive"]}
  {:name "Native Transport", :list ["start_native_transport"]}
  {:name "Timeouts",
   :list
   ["read_request_timeout_in_ms"
    "range_request_timeout_in_ms"
    "write_request_timeout_in_ms"
    "cas_contention_timeout_in_ms"
    "truncate_request_timeout_in_ms"
    "request_timeout_in_ms"
    "slow_query_log_timeout_in_ms"
    "cross_node_timeout"
    "counter_write_request_timeout_in_ms"]}
  {:name "Counter Caches",
   :list ["counter_cache_size_in_mb" "counter_cache_save_period"]}
  {:name "Snapshots",
   :list
   ["incremental_backups"
    "auto_snapshot"
    "snapshot_before_compaction"]}
  {:name "Compactions",
   :list
   ["compaction_throughput_mb_per_sec"
    "concurrent_compactors"
    "sstable_preemptive_open_interval_in_mb"]}
  {:name "Cluster Communication",
   :list
   ["endpoint_snitch"
    "dynamic_snitch_update_interval_in_ms"
    "dynamic_snitch_reset_interval_in_ms"
    "dynamic_snitch_badness_threshold"
    "internode_compression"
    "inter_dc_tcp_nodelay"]}
  {:name "Hinted Handoff",
   :list
   ["hinted_handoff_enabled"
    "max_hint_window_in_ms"
    "hinted_handoff_throttle_in_kb"
    "max_hints_delivery_threads"
    "hints_flush_period_in_ms"
    "max_hints_file_size_in_mb"
    "hints_compression"]}
  {:name "Indexes",
   :list ["column_index_size_in_kb" "column_index_cache_size_in_kb"]}
  {:name "User Defined Functions",
   :list
   ["enable_user_defined_functions"
    "enable_scripted_user_defined_functions"]}
  {:name "Change Data Capture", :list ["cdc_enabled"]}
  {:name "Back Pressure",
   :list ["back_pressure_enabled" "back_pressure_strategy"]}
  {:name "Miscellaneous",
   :list
   ["disk_failure_policy"
    "commit_failure_policy"
    "trickle_fsync"
    "trickle_fsync_interval_in_kb"
    "batchlog_replay_throttle_in_kb"
    "windows_timer_interval"
    "tracetype_query_ttl"
    "tracetype_repair_ttl"
    "prepared_statements_cache_size_mb"]}]}
