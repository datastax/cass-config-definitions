{
    "meta" : {
        "types": {
            "latency-histogram": {
                "p99th": "<b>99th</b> - The 99th percentile represents a value where 99 percent of values during a time interval are at or below, and 1 percent of values are above, the 99th percentile value.",
                "p90th": "<b>90th</b> - The 90th percentile represents a value where 90 percent of values during a time interval are at or below, and 10 percent of values are above, the 90th percentile value.",
                "median": "<b>Median</b> - The median, also known as the 50th percentile, represents a value where 50 percent of values during a time interval are either at or below the median value.",
                "max": "<b>Max</b> - The maximum latency during a time interval.",
                "min": "<b>Min</b> - The minimum latency during a time interval."
            }
        },
        "aggregates": {
            "max": "<b>Max</b> - The maximum value recorded during a time interval. A higher maximum value could have occurred without it being recorded.",
            "average": "<b>Avg</b> - The average of values recorded during a time interval.",
            "min": "<b>Min</b> - The minimal value recorded during a time interval. A lower minimal value could have occurred without it being recorded.",
            "total": "<b>Total</b> - Sum of the values recorded for each node during a time interval."
        }
    },
    "write-ops": {
        "label": "Write Requests",
        "description": "The number of write requests per second on the coordinator nodes, analogous to client writes. Monitoring the number of requests over a given time period reveals system write workload and usage patterns."
    },
    "write-latency-op": {
        "label": "Write Request Latency",
        "description": "The <i>average</i> response times (in milliseconds) of a client write. The time period starts when a node receives a client write request, and ends when the node responds back to the client. Depending on consistency level and replication factor, this may include the network latency from writing to the replicas."
    },
    "write-histogram": {
        "label": "Write Latency (Stacked)",
        "description": "The min, median, max, 90th, and 99th percentiles of a client writes. The time period starts when a node receives a client write request, and ends when the node responds back to the client. Depending on consistency level and replication factor, this may include the network latency from writing to the replicas.",
        "types": ["latency-histogram"]
    },
    "read-ops": {
        "label": "Read Requests",
        "description": "The number of read requests per second on the coordinator nodes, analogous to client reads. Monitoring the number of requests over a given time period reveals system read workload and usage patterns."
    },
    "read-latency-op": {
        "label": "Read Request Latency",
        "description": "The <i>average</i> response times (in milliseconds) of a client read. The time period starts when a node receives a client read request, and ends when the node responds back to the client. Depending on consistency level and replication factor, this may include the network latency from requesting the data’s replicas."
    },
    "read-histogram": {
        "label": "Read Latency (Stacked)",
        "description": "The min, median, max, 90th, and 99th percentiles of a client reads. The time period starts when a node receives a client read request, and ends when the node responds back to the client. Depending on consistency level and replication factor, this may include the network latency from requesting the data’s replicas.",
        "types": ["latency-histogram"]
    },
    "nonheap-committed": {
        "label": "Non Heap Committed",
        "description": "Allocated memory, guaranteed for Java nonheap."
    },
    "nonheap-max": {
        "label": "Non Heap Max",
        "description": "Maximum amount that the Java nonheap can grow."
    },
    "nonheap-used": {
        "label": "Non Heap Used",
        "description": "Average amount of Java nonheap memory used."
    },
    "heap-committed": {
        "label": "Heap Committed",
        "description": "Allocated memory guaranteed for the Java heap."
    },
    "heap-max": {
        "label": "Heap Max",
        "description": "Maximum amount that the Java heap can grow."
    },
    "heap-used": {
        "label": "Heap Used",
        "description": "Average amount of Java heap memory used."
    },
    "cms-collection-count": {
        "label": "JVM CMS Collection Count",
        "description": "Number of concurrent mark sweep garbage collections performed per second."
    },
    "par-new-collection-count": {
        "label": "JVM ParNew Collection Count",
        "description": "Number of ParNew garbage collections performed per second. ParNew collections pause all work in the JVM but should finish quickly."
    },
    "cms-collection-time": {
        "label": "JVM CMS Collection Time",
        "description": "Average number of milliseconds spent performing CMS garbage collections per second."
    },
    "par-new-collection-time": {
        "label": "JVM ParNew Collection Time",
        "description": "Average number of milliseconds spent performing ParNew garbage collections per second. ParNew collections pause all work in the JVM but should finish quickly."
    },
    "data-load": {
        "label": "Data Size",
        "description": "The live disk space used by all tables on a node."
    },
    "total-bytes-compacted": {
        "label": "Total Bytes Compacted",
        "description": "Number of bytes compacted per second."
    },
    "total-compactions-completed": {
        "label": "Total Compactions",
        "description": "Number of compaction tasks completed per second."
    },
    "pending-compaction-tasks": {
        "label": "Compactions Pending",
        "description": "Estimated number of compactions required to achieve the desired state. This includes the pending queue to the compaction executor and additional tasks that may be created from their completion."
    },
    "pending-flushes": {
        "label": "Flushes Pending",
        "description": "Number of memtables queued for the flush process. A flush sorts and writes the memtables to disk, which could block writes."
    },
    "pending-gossip-tasks": {
        "label": "Gossip Tasks Pending",
        "description": "Number of gossip messages and acknowledgments queued and waiting to be sent or received."
    },
    "pending-hinted-handoff": {
        "label": "Hinted Handoff Pending",
        "description": "Number of hints in the queue waiting to be delivered after a failed node comes up."
    },
    "pending-internal-responses": {
        "label": "Internal Responses Pending",
        "description": "Number of pending tasks from internal tasks, such as nodes joining and leaving the cluster."
    },
    "pending-repair-tasks": {
        "label": "Manual Repair Tasks Pending",
        "description": "Repair tasks pending, such as handling the merkle tree transfer after the validation compaction."
    },
    "pending-memtable-post-flushers": {
        "label": "Memtable Post Flushers Pending",
        "description": "Number of pending tasks related to the last step in flushing memtables to disk as SSTables. Includes removing unnecessary commitlog files and committing Solr-based secondary indexes."
    },
    "pending-migrations": {
        "label": "Migrations Pending",
        "description": "Number of pending tasks from system methods that modified the schema."
    },
    "pending-misc-tasks": {
        "label": "Misc. Tasks Pending",
        "description": "Number of pending tasks from infrequently run operations, such as taking a snapshot or processing the notification of a completed replication."
    },
    "pending-read-ops": {
        "label": "Read Requests Pending",
        "description": "Number of pending read requests. Read requests read data off of disk and deserialize cached data."
    },
    "pending-read-repair-tasks": {
        "label": "Read Repair Tasks Pending",
        "description": "Number of read repair operations in the queue waiting to run."
    },
    "pending-repl-on-write-tasks": {
        "label": "Repl. on Write Tasks Pending",
        "description": "Number of pending counter increment tasks that will read then write on the replicas after a coordinator's local write. Depending on consistency level used on writes, tasks may back up outside of the normal write path."
    },
    "pending-request-responses": {
        "label": "Request Responses Pending",
        "description": "Number of pending callbacks to execute after a task on a remote node completes."
    },
    "pending-write-ops": {
        "label": "Write Requests Pending",
        "description": "Number of write requests received by the cluster and waiting to be handled."
    },
    "all-pending": {
        "label": "Task Queues",
        "description": "Aggregate of thread pools pending queues that can be used to identify where things are backing up internally. This doesn't include pending compactions because it includes an estimate outside of the task queue or the hinted hand off queue, which can be in constant state of being on."
    },
    "all-dropped": {
        "label": "Dropped Tasks",
        "description": "Aggregate of different messages that might be thrown away."
    },
    "dropped-counter-mutations": {
        "label": "Dropped Counter Mutations",
        "description": "Mutation was seen after the timeout (write_request_timeout_in_ms) so was thrown away. This client might have timed out before it met the required consistency level, but might have succeeded as well. Hinted handoffs and read repairs should resolve inconsistencies but a repair can ensure it."
    },
    "dropped-mutations": {
        "label": "Dropped Mutations",
        "description": "Mutation was seen after the timeout (write_request_timeout_in_ms) so was thrown away. This client might have timed out before it met the required consistency level, but might have succeeded as well. Hinted handoffs and read repairs should resolve inconsistencies but a repair can ensure it."
    },
    "dropped-reads": {
        "label": "Dropped Reads",
        "description": "A local read request was received after the timeout (read_request_timeout_in_ms) so it was thrown away because it would have already either been completed and sent to client or sent back as a timeout error."
    },
    "dropped-ranged-slice-reads": {
        "label": "Dropped Ranged Slice Reads",
        "description": "A local ranged read request was received after the timeout (range_request_timeout_in_ms) so it was thrown away because it would have already either been completed and sent to client or sent back as a timeout error."
    },
    "dropped-paged-range-reads": {
        "label": "Dropped Paged Range Reads",
        "description": "A local paged read request was received after the timeout (request_timeout_in_ms) so it was thrown away because it would have already either been completed and sent to client or sent back as a timeout error."
    },
    "dropped-request-responses": {
        "label": "Dropped Request Responses",
        "description": "A response to a request was received after the timeout (request_timeout_in_ms) so it was thrown away because it would have already either been completed and sent to client or sent back as a timeout error."
    },
    "dropped-read-repairs": {
        "label": "Dropped Read Repairs",
        "description": "The Mutation was seen after the timeout (write_request_timeout_in_ms) so was thrown away. With the read repair timeout, the node still exists in an inconsistent state."
    },
    "key-cache-hits": {
        "label": "KeyCache Hits",
        "description": "The number of key cache hits per second. This will avoid possible disk seeks when finding a partition in an SSTable."
    },
    "key-cache-requests": {
        "label": "KeyCache Requests",
        "description": "The number of key cache requests per second."
    },
    "key-cache-hit-rate": {
        "label": "KeyCache Hit Rate",
        "description": "The percentage of key cache lookups that resulted in a hit."
    },
    "row-cache-hits": {
        "label": "RowCache Hits",
        "description": "The number of row cache hits per second."
    },
    "row-cache-requests": {
        "label": "RowCache Requests",
        "description": "The number of row cache requests per second."
    },
    "row-cache-hit-rate": {
        "label": "RowCache Hit Rate",
        "description": "The percentage of row cache lookups that resulted in a hit."
    },
    "native-connections": {
        "label": "Native Clients",
        "description": "The number of clients connected using the native protocol."
    },
    "thrift-connections": {
        "label": "Thrift Clients",
        "description": "The number of clients connected via thrift."
    },
    "read-repair-attempted": {
        "label": "Read Repairs Attempted",
        "description": "Number of read requests where the number of nodes queried possibly exceeds the consistency level requested in order to check for a possible digest mismatch."
    },
    "read-repaired-background": {
        "label": "Asynchronous Read Repairs",
        "description": "Corresponds to a digest mismatch that occurred <em>after</em> a completed read, outside of the client read loop."
    },
    "read-repaired-blocking": {
        "label": "Synchronous Read Repairs",
        "description": "Corresponds to the number of times there was a digest mismatch <em>within</em> the requested consistency level and a full data read was started."
    },
    "cf-write-ops": {
        "label": "CF: Local Writes",
        "description": "Local write requests per second. Local writes update the table's memtable and appends to a commitlog."
    },
    "cf-write-latency-op": {
        "label": "CF: Local Write Latency",
        "description": "Average response time to write data to a table's memtable and append to the commitlog. The elapsed time from when the replica receives the request from a coordinator and returns a response."
    },
    "cf-local-write-latency": {
        "label": "CF: Write Latency (Stacked)",
        "description": "The min, median, max, 90th, and 99th percentile of the response times to write data to a table's memtable and append to the commitlog. The elapsed time from when the replica receives the request from a coordinator and returns a response.",
        "types": ["latency-histogram"]
    },
    "cf-read-ops": {
        "label": "CF: Local Reads",
        "description": "Local read requests per second. Local reads retrieve data from a table's memtable and any necessary SSTables on disk."
    },
    "cf-read-latency-op": {
        "label": "CF: Local Read Latency",
        "description": "Average response time to read data from the memtable and SSTables for a specific table. The elapsed time from when the replica receives the request from a coordinator and returns a response."
    },
    "cf-local-read-latency": {
        "label": "CF: Read Latency (Stacked)",
        "description": "The min, median, max, 90th, and 99th percentile of the response time to read data from the memtable and sstables for a specific table. The elapsed time from when the replica receives the request from a coordinator and returns a response.",
        "types": ["latency-histogram"]
    },
    "cf-live-disk-used": {
        "label": "CF: Live Disk Used",
        "description": "Disk space used by live SSTables. There might be obsolete SSTables not included."
    },
    "cf-total-disk-used": {
        "label": "CF: Total Disk Used",
        "description": "Disk space used by a table by SSTables, including obsolete ones waiting to be garbage collected."
    },
    "cf-live-sstables": {
        "label": "CF: SSTable Count",
        "description": "Total number of SSTables for a table."
    },
    "cf-sstables-per-read": {
        "label": "CF: SSTables per Read (Stacked)",
        "description": "The min, median, max, 90th, and 99th percentile of how many SSTables are accessed during a read. Includes sstables that undergo bloom-filter checks, even if no data is read from the sstable.",
        "p99th": "<b>99th</b> - 99 percent of reads checked or read no more than this many SSTables during the period.",
        "p90th": "<b>90th</b> - 90 percent of reads checked or read no more than this many SSTables during the period.",
        "median": "<b>Median</b> - 50 percent of reads checked or read no more than this many SSTables during the period.",
        "max" : "<b>Max</b> - Maximum number of SSTables checked or read during this period for a single read on this table.",
        "min" : "<b>Min</b> - Minimum number of SSTables checked or read during this period for a single read on this table."
    },
    "cf-pending-tasks": {
        "label": "CF: Pending Reads/Writes",
        "description": "Estimate of the number of mutation threads blocked on a memtable flush or truncate."
    },
    "cf-bf-space-used": {
        "label": "CF: Bloom Filter Space Used",
        "description": "The total size of all the SSTables' bloom filters for this table."
    },
    "cf-bf-false-positives": {
        "label": "CF: Bloom Filter False Positives",
        "description": "Number of bloom filter false positives per second."
    },
    "cf-bf-false-ratio": {
        "label": "CF: Bloom Filter False Positive Ratio",
        "description": "Percentage of bloom filter lookups that resulted in a false positive."
    },
    "cf-bf-offheap": {
        "label": "CF: Bloom Filter Off Heap",
        "description": "Total off heap memory used by bloom filters from all live SSTables in a table."
    },
    "cf-index-summary-offheap": {
        "label": "CF: Index Summary Off Heap",
        "description": "Total off heap memory used by the index summary of all live SSTables in a table."
    },
    "cf-compression-data-offheap": {
        "label": "CF: Compression Metadata Off Heap",
        "description": "Total off heap memory used by the compression metadata of all live SSTables in a table."
    },
    "cf-memtable-offheap": {
        "label": "CF: Memtable Off Heap",
        "description": "Off heap memory used by a table's current memtable."
    },
    "cf-all-memtables-datasize": {
        "label": "CF: Total Memtable Size",
        "description": "An estimate of the space used in memory (including JVM overhead) for all memtables. This includes ones that are currently being flushed and related secondary indexes."
    },
    "solr-requests": {
        "label": "Search: Requests",
        "description": "Requests per second made to a specific Solr core/index."
    },
    "solr-avg-time-per-req": {
        "label": "Search: Request Latency",
        "description": "Average time a search query takes in a DSE cluster using DSE Search."
    },
    "solr-errors": {
        "label": "Search: Errors",
        "description": "Errors per second that occur for a specific Solr core/index."
    },
    "solr-timeouts": {
        "label": "Search: Timeouts",
        "description": "Timeouts per second on a specific Solr core/index."
    },
    "in-memory-percent-used": {
	"label": "In-Memory Percent Used",
	"description": "The percentage of memory allocated for in-memory tables currently in use."
    },
    "os-memory": {
        "label": "OS: Memory (stacked)",
        "description": "Stacked graph of used, cached, and free memory."
    },
    "os-memory-osx": {
        "label": "OS: Memory (stacked)",
        "description": "Stacked graph of used and free memory."
    },
    "os-memory-win": {
        "label": "OS: Memory (stacked)",
        "description": "Stacked graph of committed, cached, paged, non-paged, and free memory."
    },
    "os-memory-free": {
        "label": "OS: Memory Free",
        "description": "Total system memory currently free."
    },
    "os-memory-used": {
        "label": "OS: Memory Used",
        "description": "Total system memory currently used."
    },
    "os-memory-shared": {
        "label": "OS: Memory Shared",
        "description": "Total amount of memory in shared memory space."
    },
    "os-memory-buffers": {
        "label": "OS: Memory Buffered",
        "description": "Total system memory currently buffered."
    },
    "os-memory-cached": {
        "label": "OS: Memory Cached",
        "description": "Total system memory currently cached."
    },
    "os-memory-avail": {
        "label": "OS: Memory Available",
        "description": "Available physical memory."
    },
    "os-memory-committed": {
        "label": "OS: Memory Committed",
        "description": "Memory in use by the operating system."
    },
    "os-memory-pool-paged": {
        "label": "OS: Pool Paged Resident Memory",
        "description": "Allocated pool-paged-resident memory."
    },
    "os-memory-pool-nonpaged": {
        "label": "OS: Pool Nonpaged Memory",
        "description": "Allocated pool-nonpaged memory."
    },
    "os-memory-sys-cache-resident": {
        "label": "OS: System Cache Resident Memory",
        "description": "Memory used by the file cache."
    },
    "cpu": {
        "label": "OS: CPU (stacked)",
        "description": "Stacked graph of iowait, steal, nice, system, user, and idle CPU usage."
    },
    "cpu-osx": {
        "label": "OS: CPU (stacked)",
        "description": "Stacked graph of idle, user, and system CPU usage."
    },
    "cpu-win": {
        "label": "OS: CPU (stacked)",
        "description": "Stacked graph of user, privileged, and idle CPU usage."
    },
    "os-cpu-user": {
        "label": "OS: CPU User",
        "description": "Time the CPU devotes to user processes."
    },
    "os-cpu-system": {
        "label": "OS: CPU System",
        "description": "Time the CPU devotes to system processes."
    },
    "os-cpu-idle": {
        "label": "OS: CPU Idle",
        "description": "Time the CPU is idle."
    },
    "os-cpu-iowait": {
        "label": "OS: CPU Iowait",
        "description": "Time the CPU devotes to waiting for I/O to complete."
    },
    "os-cpu-steal": {
        "label": "OS: CPU Steal",
        "description": "Time the CPU devotes to tasks stolen by virtual operating systems."
    },
    "os-cpu-nice": {
        "label": "OS: CPU Nice",
        "description": "Time the CPU devotes to processing nice tasks."
    },
    "os-cpu-privileged": {
        "label": "OS: CPU Privileged",
        "description": "Time the CPU devotes to processing privileged instructions."
    },
    "os-load": {
        "label": "OS: Load",
        "description": "Operating system load average."
    },
    "os-disk-usage": {
        "label": "OS: Disk Usage (%)",
        "description": "Disk space used by Cassandra at a given time.",
        "total": "<b>Total</b> - The sum of all the nodes disk used values divided by the sum of all the nodes total disk space."
    },
    "os-disk-free": {
        "label": "OS: Disk Free",
        "description": "Free space on a specific disk partition."
    },
    "os-disk-used": {
        "label": "OS: Disk Used",
        "description": "Disk space used by Cassandra at a given time."
    },
    "os-disk-read-throughput": {
        "label": "OS: Disk Read Throughput",
        "description": "Average disk throughput for read operations."
    },
    "os-disk-write-throughput": {
        "label": "OS: Disk Write Throughput",
        "description": "Average disk throughput for write operations."
    },
    "os-disk-throughput": {
        "label": "OS: Disk Throughput",
        "description": "Average disk throughput for read and write operations."
    },
    "os-disk-read-rate": {
        "label": "OS: Disk Read Rate",
        "description": "Rate of reads per second to the disk."
    },
    "os-disk-write-rate": {
        "label": "OS: Disk Writes Rate",
        "description": "Rate of writes per second to the disk."
    },
    "os-disk-await": {
        "label": "OS: Disk Latency",
        "description": "Average completion time of each request to the disk."
    },
    "os-disk-request-size": {
        "label": "OS: Disk Request Size",
        "description": "Average size of read requests issued to the disk."
    },
    "os-disk-request-size-kb": {
        "label": "OS: Disk Request Size",
        "description": "Average size of read requests issued to the disk."
    },
    "os-disk-queue-size": {
        "label": "OS: Disk Queue Size",
        "description": "Average number of requests queued due to disk latency issues."
    },
    "os-disk-utilization": {
        "label": "OS: Disk Utilization",
        "description": "CPU time consumed by disk I/O."
    },
    "os-net-received": {
        "label": "OS: Net Received",
        "description": "Speed of data received from the network."
    },
    "os-net-sent": {
        "label": "OS: Net Sent",
        "description": "Speed of data sent across the network."
    }
}
