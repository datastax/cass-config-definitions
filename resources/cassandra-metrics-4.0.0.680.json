{
    "meta": {
        "dse_version": "6.8.0",
        "aggregates": {
            "max": "<b>Max</b> - The maximum value recorded during a time interval. A higher maximum value could have occurred without it being recorded.",
            "average": "<b>Avg</b> - The average of values recorded during a time interval.",
            "total": "<b>Total</b> - Sum of the values recorded for each node during a time interval.",
            "min": "<b>Min</b> - The minimal value recorded during a time interval. A lower minimal value could have occurred without it being recorded."
        },
        "include": ["cassandra-metrics-4.0.0.670.json"],
        "exclude": ["active-eventloop-park", "completed-eventloop-park", "completed-eventloop-processed-tasks", "active-eventloop-processed-tasks",
                    "active-eventloop-scheduled-tasks", "completed-eventloop-scheduled-tasks", "active-eventloop-selector-events", "completed-eventloop-selector-events",
                    "active-eventloop-select-calls", "completed-eventloop-select-calls", "active-eventloop-select-now-calls", "completed-eventloop-select-now-calls",
                    "active-eventloop-spin", "completed-eventloop-spin", "active-eventloop-yield", "completed-eventloop-yield",
                    "pending-frame-decode", "total-blocked-frame-decode", "active-read-deferred", "completed-read-deferred",
                    "pending-read-deferred", "total-blocked-read-deferred", "completed-read-repair-stage", "pending-read-repair-stage", "active-read-repair-stage",
                    "hint-replay-error-rate", "hint-replay-success-rate", "hint-replay-timeout-rate", "stream-in-total", "stream-out-total", "active-cas",
                    "completed-cas", "active-read-repair-stage", "completed-read-repair-stage", "pending-read-repair-stage"]
    },
    "native-graph-request-latencies": {
        "aggregation_type": "histogram",
        "api_key": "native-graph-request-latencies",
        "is_native_graph_specific": true,
        "description": "The min, median, max, 90th, and 99th percentile of request transversal latencies during the period.",
        "group": "native_graph",
        "histogram": true,
        "label": "Datastax Graph: Request Latencies",
        "label_func": "logLabel",
        "max": "<b>Max</b> - Maximum transversal latency for a request against this graph during the period.",
        "mbean": "com.datastax.bdp:type=metrics,path=graph,scope=per-graph,name={keyspace}Latency",
        "median": "<b>Median</b> - 50 percent of requests against this graph during the period had a shorter latency.",
        "metric_type": "histogram",
        "min": "<b>Min</b> - Minimum latency for a request against this graph during the period.",
        "p90th": "<b>90th</b> - 90 percent of requests against this graph during the period had a shorter latency.",
        "p99th": "<b>99th</b> - 99 percent of requests against this graph during the period had a shorter latency.",
        "invoke": ["values"],
        "plot": "Areas",
        "scale": "logScale",
        "scope": "native-graph",
        "type": "jmx",
        "to_unit": "nsToMs",
        "from_unit": "msToNs",
        "unit": "ms"
    },
    "native-graph-traversals": {
        "aggregation_type": "counter",
        "api_key": "native-graph-traversals",
        "is_native_graph_specific": true,
        "description": "The number of aliased traverals that have been run against the graph.",
        "group": "native_graph",
        "label": "Datastax Graph: Submitted Traversals",
        "mbean": "com.datastax.bdp:type=metrics,path=graph,scope=per-graph,name={keyspace}SubmittedTraversals",
        "metric_type": "gauge",
        "path": ["Count"],
        "scope": "native-graph",
        "type": "jmx"
    },
    "native-graph-total-latency": {
        "aggregation_type": "counter",
        "api_key": "native-graph-total-latency",
        "is_native_graph_specific": true,
        "description": "The sum of all latency during traversals of the graph.",
        "group": "native_graph",
        "label": "Datastax Graph: Total Latency",
        "mbean": "com.datastax.bdp:type=metrics,path=graph,scope=per-graph,name={keyspace}TotalLatency",
        "metric_type": "gauge",
        "path": ["Count"],
        "scope": "native-graph",
        "type": "jmx"
    },
    "native-all-graph-request-latencies": {
        "aggregation_type": "histogram",
        "api_key": "native-all-graph-request-latencies",
        "description": "The min, median, max, 90th, and 99th percentile of request transversal latencies during the period.",
        "group": "cassandra",
        "histogram": true,
        "label": "Datastax Graph: Request Latencies ALL",
        "label_func": "logLabel",
        "max": "<b>Max</b> - Maximum transversal latency for a request against this graph during the period.",
        "mbean": "com.datastax.bdp:type=metrics,path=graph,scope=all,name=Latency",
        "median": "<b>Median</b> - 50 percent of requests against this graph during the period had a shorter latency.",
        "metric_type": "histogram",
        "min": "<b>Min</b> - Minimum latency for a request against this graph during the period.",
        "p90th": "<b>90th</b> - 90 percent of requests against this graph during the period had a shorter latency.",
        "p99th": "<b>99th</b> - 99 percent of requests against this graph during the period had a shorter latency.",
        "invoke": ["values"],
        "plot": "Areas",
        "scale": "logScale",
        "scope": "native-graph",
        "type": "jmx",
        "to_unit": "nsToMs",
        "from_unit": "msToNs",
        "unit": "ms"
    },
    "native-all-graph-traversals": {
        "aggregation_type": "counter",
        "api_key": "native-all-graph-traversals",
        "description": "The number of aliased traversals that have been run against the graph.",
        "group": "cassandra",
        "label": "Datastax Graph: Submitted Traversals ALL",
        "mbean": "com.datastax.bdp:type=metrics,path=graph,scope=all,name=totalSubmittedTraversals",
        "metric_type": "gauge",
        "path": ["Count"],
        "scope": "general",
        "type": "jmx"
    },
    "native-all-graph-total-latency": {
        "aggregation_type": "counter",
        "api_key": "native-all-graph-total-latency",
        "description": "The sum of all latency during traversals of graphs.",
        "group": "cassandra",
        "label": "Datastax Graph: Total Latency ALL",
        "mbean": "com.datastax.bdp:type=metrics,path=graph,scope=all,name=TotalLatency",
        "metric_type": "gauge",
        "path": ["Count"],
        "scope": "general",
        "type": "jmx"
    },
    "native-all-graph-unaliased-request-latencies": {
        "aggregation_type": "histogram",
        "api_key": "native-all-graph-unaliased-request-latencies",
        "description": "The min, median, max, 90th, and 99th percentile of request transversal latencies during the period.",
        "group": "cassandra",
        "histogram": true,
        "label": "Datastax Graph: Unaliased Request Latencies ALL",
        "label_func": "logLabel",
        "max": "<b>Max</b> - Maximum transversal latency for a request against this graph during the period.",
        "mbean": "com.datastax.bdp:type=metrics,path=graph,scope=all,name=unaliasedLatency",
        "median": "<b>Median</b> - 50 percent of requests against this graph during the period had a shorter latency.",
        "metric_type": "histogram",
        "min": "<b>Min</b> - Minimum latency for a request against this graph during the period.",
        "p90th": "<b>90th</b> - 90 percent of requests against this graph during the period had a shorter latency.",
        "p99th": "<b>99th</b> - 99 percent of requests against this graph during the period had a shorter latency.",
        "invoke": ["values"],
        "plot": "Areas",
        "scale": "logScale",
        "scope": "native-graph",
        "type": "jmx",
        "to_unit": "nsToMs",
        "from_unit": "msToNs",
        "unit": "ms"
    },
    "native-all-graph-unaliased-total-latency": {
        "aggregation_type": "counter",
        "api_key": "native-all-graph-unaliased-total-latency",
        "description": "The sum of all latency during unaliased traversals of graphs.",
        "group": "cassandra",
        "label": "Datastax Graph: Unaliased Total Latency ALL",
        "mbean": "com.datastax.bdp:type=metrics,path=graph,scope=all,name=unaliasedTotalLatency",
        "metric_type": "gauge",
        "path": ["Count"],
        "scope": "general",
        "type": "jmx"
    },
    "native-all-graph-unaliased-traversals": {
        "aggregation_type": "counter",
        "api_key": "native-all-graph-unaliased-traversals",
        "description": "The number of unaliased traverals that have been run against the graph",
        "group": "cassandra",
        "label": "Datastax Graph: Unaliased Submitted Traversals ALL",
        "mbean": "com.datastax.bdp:type=metrics,path=graph,scope=per-graph,name=unaliasedSubmittedTraversals",
        "metric_type": "gauge",
        "path": ["Count"],
        "scope": "general",
        "type": "jmx"
    },
    "all-pending": {
        "api_key": "all-pending",
        "description": "Aggregate of thread pools pending queues that can be used to identify where things are backing up internally. This doesn't include pending compactions because it includes an estimate outside of the task queue or the hinted hand off queue, which can be in constant state of being on.",
        "group": "cassandra",
        "label": "Task Queues",
        "metrics": [
            "pending-anti-entropy-stage",
            "pending-auth-stage",
            "pending-background-io-stage",
            "pending-batch-remove",
            "pending-batch-store",
            "pending-cache-cleanup-stage",
            "pending-compaction-executor",
            "pending-flushes",
            "pending-gossip-stage",
            "pending-hint-dispatch",
            "pending-hint-dispatcher",
            "pending-internal-response-stage",
            "pending-lwt-commit",
            "pending-lwt-prepare",
            "pending-lwt-propose",
            "pending-memtable-post-flush",
            "pending-migration-stage",
            "pending-misc-stage",
            "pending-network-backpressure",
            "pending-pending-range-calculator",
            "pending-read-local",
            "pending-read-range-local",
            "pending-read-range-nodesync",
            "pending-read-range-remote",
            "pending-read-remote",
            "pending-read-repair-stage",
            "pending-repair-task",
            "pending-request-response-stage",
            "pending-secondary-index-management",
            "pending-truncate",
            "pending-validation-executor",
            "pending-view-build-executor",
            "pending-write-defragment",
            "pending-write-local",
            "pending-write-remote"
        ],
        "plot": "StackedAreas",
        "priority": 25,
        "unit": "tasks"
    },
    "nodesync-tbl-incremental-validation-covered-ages-seconds":{
        "aggregation_type": "histogram",
        "histogram": true,
        "metric_type": "histogram",
        "api_key": "nodesync-tbl-incremental-validation-covered-ages-seconds",
        "description": "The oldest data validated by Incremental NodeSync in seconds for a given time interval",
        "group": "nodesync",
        "label": "NodeSync TBL: Incremental Validation Covered Ages Seconds",
        "mbean": "org.apache.cassandra.metrics:type=Table,keyspace={keyspace},scope={table},name=NodeSyncIncrementalValidationsCoveredAgesSeconds",
        "max": "<b>Max</b> - The oldest data (in seconds since insertion) incremental NodeSync has had to validate",
        "median": "<b>Median</b> - 50 percent of validations validated data whose age (seconds since their insertion) was either at or below this value",
        "min": "<b>Min</b> - The newest data (in seconds since insertion) incremental NodeSync has had to validate",
        "p90th": "<b>90th</b> - 90 percent of validations validated data whose age (seconds since their insertion) was either at or below this value",
        "p99th": "<b>99th</b> - 99 percent of validations validated data whose age (seconds since their insertion) was either at or below this value",
        "invoke": ["values"],
        "plot": "Areas",
        "priority": 27,
        "is_table_metric": true,
        "scope": "cf",
        "type": "jmx",
        "unit": "seconds"
    },
    "cf-sai-disk-used": {
        "aggregation_type": "counter",
        "alerts_label": "SAI Total Disk Used",
        "api_key": "cf-sai-disk-used",
        "is_table_metric": true,
        "description": "Storage Attached Index disk space used.",
        "from_unit": "gbToBytes",
        "group": "cf",
        "label": "TBL: SAI Total Disk Used",
        "mbean": "org.apache.cassandra.metrics:type=StorageAttachedIndex,keyspace={keyspace},table={table},scope=TableStateMetrics,name=DiskUsedBytes",
        "metric_type": "gauge",
        "path": ["Value"],
        "postprocess": ["neg-to-nil"],
        "scope": "cf",
        "storage_name": "getSaiDiskSpaceUsed",
        "to_unit": "bytesToGb",
        "type": "jmx",
        "render_type": "filesize"
    },
    "cf-sai-num-indexes": {
        "aggregation_type": "counter",
        "alerts_label": "Number of Storage Attached Indexes",
        "api_key": "cf-sai-num-indexes",
        "is_table_metric": true,
        "description": "Number of Storage Attached Indexes.",
        "group": "cf",
        "label": "TBL: SAI Number of Indexes",
        "mbean": "org.apache.cassandra.metrics:type=StorageAttachedIndex,keyspace={keyspace},table={table},scope=TableStateMetrics,name=TotalIndexCount",
        "metric_type": "gauge",
        "path": ["Value"],
        "scope": "cf",
        "storage_name": "getSaiIndexCount",
        "type": "jmx"
    },
    "cf-sai-num-indexes-building": {
        "aggregation_type": "counter",
        "alerts_label": "Number of Storage Attached Indexes Building",
        "api_key": "cf-sai-num-indexes-building",
        "is_table_metric": true,
        "description": "Number of Storage Attached Indexes Building.",
        "group": "cf",
        "label": "TBL: SAI Indexes Building",
        "mbean": "org.apache.cassandra.metrics:type=StorageAttachedIndex,keyspace={keyspace},table={table},scope=TableStateMetrics,name=TotalIndexBuildsInProgress",
        "metric_type": "gauge",
        "path": ["Value"],
        "scope": "cf",
        "storage_name": "getSaiIndexesBuildingCount",
        "type": "jmx"
    },
    "cf-sai-num-indexes-queryable": {
        "aggregation_type": "counter",
        "alerts_label": "Number of Storage Attached Indexes Queryable",
        "api_key": "cf-sai-num-indexes-queryable",
        "is_table_metric": true,
        "description": "Number of Storage Attached Indexes Queryable.",
        "group": "cf",
        "label": "TBL: SAI Indexes Queryable",
        "mbean": "org.apache.cassandra.metrics:type=StorageAttachedIndex,keyspace={keyspace},table={table},scope=TableStateMetrics,name=TotalQueryableIndexCount",
        "metric_type": "gauge",
        "path": ["Value"],
        "scope": "cf",
        "storage_name": "getSaiIndexesQueryableCount",
        "type": "jmx"
    },
    "cf-sai-disk-used-ratio": {
        "aggregation_type": "counter",
        "alerts_label": "SAI Disk Used Ratio",
        "api_key": "cf-sai-disk-used-ratio",
        "is_table_metric": true,
        "description": "Storage Attached Index disk space used as a ratio of base table.",
        "group": "cf",
        "label": "TBL: SAI Disk Used Ratio",
        "mbean": "org.apache.cassandra.metrics:type=StorageAttachedIndex,keyspace={keyspace},table={table},scope=TableStateMetrics,name=DiskPercentageOfBaseTable",
        "metric_type": "gauge",
        "path": ["Value"],
        "scope": "cf",
        "storage_name": "getSaiDiskSpaceUsedPercentage",
        "type": "jmx",
        "minstep": 0.05,
        "precision": 2
    }
}
